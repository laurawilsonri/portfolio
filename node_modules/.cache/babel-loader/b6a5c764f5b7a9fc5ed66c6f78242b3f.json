{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Documents/my-app/src/sections/CodeProjects.jsx\";\nimport React, { Component } from 'react';\nimport './Section.css';\nimport DisplayGrid from '../components/DisplayGrid';\nimport PopupButton from '../components/PopupButton';\n\nclass CodeProjects extends Component {\n  // props are :headerText :list of body\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: this.getProjects()\n    };\n  } // all the code projects\n\n\n  getProjects() {\n    return [{\n      name: \"PROJ 1\",\n      logline: \"one sentence description\",\n      pageHTML: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 81\n        }\n      }, \"DESCRIPTION\")\n    }];\n  }\n\n  render() {\n    let project_count = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"code-projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DisplayGrid, {\n      key: \"project-count-\" + project_count++,\n      items: this.state.projects.map(p => /*#__PURE__*/React.createElement(PopupButton, {\n        name: p.name,\n        logline: p.logline,\n        pageHTML: p.pageHTML,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 55\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default CodeProjects;","map":{"version":3,"sources":["/Users/laura/Documents/my-app/src/sections/CodeProjects.jsx"],"names":["React","Component","DisplayGrid","PopupButton","CodeProjects","constructor","props","state","projects","getProjects","name","logline","pageHTML","render","project_count","map","p"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAGjC;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KAAKC,WAAL;AADD,KAAb;AAGD,GAV8B,CAYjC;;;AACAA,EAAAA,WAAW,GAAG;AACV,WAAO,CAAC;AAACC,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAE,0BAA1B;AAAsDC,MAAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhE,KAAD,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,aAAa,GAAG,CAApB;AAEA,wBACI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAE,mBAAmBA,aAAa,EAAlD;AACA,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,GAApB,CAAyBC,CAAD,iBAAO,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,CAAC,CAACN,IAArB;AAA2B,QAAA,OAAO,EAAEM,CAAC,CAACL,OAAtC;AAA+C,QAAA,QAAQ,EAAEK,CAAC,CAACJ,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/B,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AA1BgC;;AA6BrC,eAAeR,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Section.css';\nimport DisplayGrid from '../components/DisplayGrid';\nimport PopupButton from '../components/PopupButton';\n\nclass CodeProjects extends Component {\n\n\n    // props are :headerText :list of body\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: this.getProjects()\n        };\n      }\n\n    // all the code projects\n    getProjects() {\n        return [{name: \"PROJ 1\", logline: \"one sentence description\", pageHTML: <div>DESCRIPTION</div>}]\n    }\n\n    render(){\n        let project_count = 0;\n\n        return (\n            <div id=\"code-projects\">\n                <DisplayGrid key={\"project-count-\" + project_count++} \n                items={this.state.projects.map((p) => <PopupButton name={p.name} logline={p.logline} pageHTML={p.pageHTML}/>)} />\n            </div>\n        );\n    }\n}\n\nexport default CodeProjects;"]},"metadata":{},"sourceType":"module"}