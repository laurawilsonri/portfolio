{"version":3,"sources":["images/poster/poster_demo.mp4","images/RESUME.pdf","images/artsy_profile.png","images/dataverse/thumbnail_dv.jpg","images/netflix/netflix_thumbnail.png","images/poster/poster_thumbnail.png","images/jam-stage/jam_thumbnail.png","images/dash/touch_menu.jpg","images/translation/translation_thumbnail.png","images/dataverse/dv_home_page.jpg","images/jam-stage/zoomed-out.png","images/jam-stage/close-up.png","images/netflix/netflix_actor_flow_with_tooltip.png","images/netflix/netflix_runtime_graph.png","images/dash/ideation.jpg","images/dash/interaction_table.jpg","images/dash/touch_menu_cropped.mp4","images/translation/translation_diagram.png","images/train/train_thumbnail.jpg","images/happy-robot/robot_thumbnail.jpg","images/covid-kit/kit_thumbnail.jpg","images/ring/ring_thumbnail.jpg","images/hotel/hotel_thumbnail.jpg","images/train/train_phone1.png","images/train/train_phone2.png","images/train/train_physical.jpg","images/train/train_physical_demo.mp4","images/train/train_app_walkthrough_cropped.mp4","images/happy-robot/3d_model.jpg","images/happy-robot/happy_the_robot.gif","images/happy-robot/ideation.jpg","images/happy-robot/iteration1.jpg","images/happy-robot/tech_working.gif","images/happy-robot/robot_iterations.jpg","images/covid-kit/form.jpg","images/covid-kit/ideation_collage.jpg","images/covid-kit/mask_prototype.jpg","images/covid-kit/prototype.jpg","images/covid-kit/final.jpg","images/covid-kit/kit_includes.jpg","images/ring/ring_final.jpg","images/ring/ideation.jpg","images/ring/ring_3d.jpg","images/ring/metal.jpg","images/ring/open_door.gif","images/ring/ring_poster.jpg","images/hotel/hotel_eyetracking_cal.jpg","images/hotel/hotel_eyetracking_home.jpg","images/hotel/sketches.jpg","images/hotel/hotel_guest.jpg","VerticalNavBar.js","sections/WhoIAmPage.jsx","components/DisplayGrid.jsx","components/PopupButton.jsx","sections/CodeProjects.jsx","sections/DesignProjects.jsx","sections/Resume.jsx","sections/ArtProjects.jsx","PortfolioSite.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","VerticalNavBar","props","state","currPage","pages","pg","this","setState","selectPage","count","className","id","src","profilePic","map","key","name","Component","WhoIAmPage","interval","DisplayGrid","open","items","PopupButton","expanded","word_count","onClick","e","console","log","close","expand","thumbnail","title","subtitle","keywords","word","launchLink","window","stopPropagation","target","launchBtnText","OpenInNew","style","pageHTML","CodeProjects","projects","getProjects","logline","dv_thumbnail","languages","getDataversePage","jam_thumbnail","getJamStagePage","poster_thumbnail","getPosterGenPage","netflix_thumbnail","getNetflixPage","dash_thumbnail","getDashPage","demoLink","translation_thumbnail","getTranslationPage","dataverse_home","jam_zoomout","jam_zoomin","href","autoPlay","muted","loop","poster_demo","type","netflix_runtime","netflix_flow","dash_ideation","dash_interaction_table","dash_touch_demo","translation_diagram","width","height","frameborder","allow","allowfullscreen","project_count","p","covid_kit_link","hotel_link","DesignProjects","getTriviaTrainPage","train_phone1","train_phone2","train_physical","train_physical_demo","train_app_demo","getHappyRobotPage","happy_ideation","happy_iteration1","happy_tech_working","happy_iterations","happy_3d_model","happy_gif","getCovidKitPage","kit_ideation","kit_mask","kit_form","kit_prototype","kit_final","kit_includes","getAccessPage","ring_ideation","ring_metal","ring_3d","ring_final","ring_gif","ring_poster","allowFullScreen","getHotelPage","hotel_sketches","hotel_guest","hotel_eyetracking_home","hotel_eyetracking_booking","train_thumbnail","tools","robot_thumbnail","covid_thumbnail","ring_thumbnail","hotel_thumbnail","Resume","resume","ArtProjects","PortfolioSite","updateSelectedPage","page","curPage","content","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,yC,uBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,kBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mD,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,mD,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,2D,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.e60e20df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poster_demo.ab2c00ad.mp4\";","module.exports = __webpack_public_path__ + \"static/media/RESUME.59f85adf.pdf\";","module.exports = __webpack_public_path__ + \"static/media/artsy_profile.c9bf2293.png\";","module.exports = __webpack_public_path__ + \"static/media/thumbnail_dv.738383ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/netflix_thumbnail.b731ff8b.png\";","module.exports = __webpack_public_path__ + \"static/media/poster_thumbnail.760a58b8.png\";","module.exports = __webpack_public_path__ + \"static/media/jam_thumbnail.8cebe69a.png\";","module.exports = __webpack_public_path__ + \"static/media/touch_menu.63959f76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/translation_thumbnail.2bd1b7fe.png\";","module.exports = __webpack_public_path__ + \"static/media/dv_home_page.2d1e9a7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zoomed-out.779a1206.png\";","module.exports = __webpack_public_path__ + \"static/media/close-up.479e4f07.png\";","module.exports = __webpack_public_path__ + \"static/media/netflix_actor_flow_with_tooltip.f4a5c2e9.png\";","module.exports = __webpack_public_path__ + \"static/media/netflix_runtime_graph.546af466.png\";","module.exports = __webpack_public_path__ + \"static/media/ideation.93ee15cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/interaction_table.63be7712.jpg\";","module.exports = __webpack_public_path__ + \"static/media/touch_menu_cropped.70e3debe.mp4\";","module.exports = __webpack_public_path__ + \"static/media/translation_diagram.4a746c1a.png\";","module.exports = __webpack_public_path__ + \"static/media/train_thumbnail.199250ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/robot_thumbnail.2e1527b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kit_thumbnail.397b5b2a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ring_thumbnail.8a9d164d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel_thumbnail.9fa05dfa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/train_phone1.d2f7923b.png\";","module.exports = __webpack_public_path__ + \"static/media/train_phone2.02d75139.png\";","module.exports = __webpack_public_path__ + \"static/media/train_physical.d8d47bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/train_physical_demo.48cd9604.mp4\";","module.exports = __webpack_public_path__ + \"static/media/train_app_walkthrough_cropped.d6395f19.mp4\";","module.exports = __webpack_public_path__ + \"static/media/3d_model.c7234f80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/happy_the_robot.ce738d87.gif\";","module.exports = __webpack_public_path__ + \"static/media/ideation.53b3aa38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iteration1.5a0768c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tech_working.659487b4.gif\";","module.exports = __webpack_public_path__ + \"static/media/robot_iterations.e7b92f55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/form.40e38318.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ideation_collage.f375043f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mask_prototype.0dd80797.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prototype.c017d1ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/final.90c76c79.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kit_includes.26c9e2a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ring_final.eb7ed155.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ideation.e5a4522f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ring_3d.34728bd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/metal.c4067658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/open_door.e7c1d813.gif\";","module.exports = __webpack_public_path__ + \"static/media/ring_poster.711dc0ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel_eyetracking_cal.2215f2d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel_eyetracking_home.c0fd241c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sketches.a8cf07e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel_guest.1296a1d5.jpg\";","import React, { Component } from 'react';\nimport './VerticalNavBar.css';\nimport profilePic from \"./images/artsy_profile.png\";\n\nclass VerticalNavBar extends Component {\n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          currPage: this.props.pages[0] //default is first\n        };\n    }\n\n    selectPage(pg) {\n        this.setState({currPage: pg})\n        this.props.selectPage(pg)\n    }\n\n    render(){    \n        let count = 0;\n        return (\n            <div className=\"navbar\">\n                <div id=\"header-content\">\n                <img id=\"profile-img\" src={profilePic}></img>\n                <h2 id=\"title\"><b>Laura Wilson</b></h2>\n                <small className=\"subtitle\">CS | Brown '21</small>\n                </div>\n\n                <div id=\"pages\">\n                {/*display all the names of the pages as buttons that will scroll to the content*/}\n                {this.props.pages.map(pg => \n                    <h4 key={\"btn-\" + count++} className=\"page-name\" className={(this.state.currPage == pg ? \"selected\" : \"\")}\n                        onClick={() => this.selectPage(pg)}>\n                             {(this.state.currPage == pg ? \">_\" : \"\")}{pg.name}\n                        </h4>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VerticalNavBar;\n","import React, { Component } from 'react';\nimport './Section.css';\nimport TextLoop from \"react-text-loop\";\n\nclass WhoIAmPage extends Component {\n\n    // props are :headerText :list of body\n    constructor(props) {\n        super(props);\n      }\n\n    render(){    \n        return (\n            <div id=\"who-i-am-div\">\n                <h1 className=\"large-title\">Hi there, I'm Laura.</h1>\n                <h4 className=\"large-subtitle\">thanks for checking out my portfolio today!</h4>\n                <br/><br/><br/>\n                {/* subtitle that alternates text */}\n                <h2 id=\"dynamic-text\">I'm a{\" \"}\n                    <TextLoop interval={2000} className=\"changeable\">\n                        <span> senior at Brown University.</span>\n                        <span> Computer Science major.</span>\n                        <span> designer and visual artist.</span>\n                    </TextLoop>\n            </h2>\n\n            <p>I'm a <b>senior at Brown University</b>, graduating in Spring 2021.  As a computer science major, \n                I'm passionate about frontend web development and UI/UX, where I can merge my <b>interests \n                in software engineering and design.</b> I've been a TA for three CS courses and am currently a Head-TA for the UI/UX course. \n                In addition, I'm a mentor for new CS students and co-coordinator of the CS yearbook! </p>\n\n                <p>When I'm not debugging CSS or painting my cats, I'm usually baking, hiking, playing co-op board games, \n                    solving logic puzzles, or scouting out the best donut shop! </p>\n\n            </div>\n        );\n    }\n}\n\nexport default WhoIAmPage;","import React, { Component } from 'react';\nimport './DisplayGrid.css';\n\nclass DisplayGrid extends Component {\n\n    /**\n     * Grid that displays a list of things in a flex\n     * @param {items: [Component, ...]} props \n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false\n        };\n      }\n\n    render(){    \n        return (\n            <div className=\"display-grid\">\n               {this.props.items}\n            </div>\n        );\n    }\n}\n\nexport default DisplayGrid;","import React, { Component } from 'react';\nimport './PopupButton.css';\nimport { OpenInNew } from '@material-ui/icons';\n\nclass PopupButton extends Component {\n\n    /**\n     * Large square button that opens a popup on click\n     * @param {title, subtitle, thumbnail, keywords: [string, ...], pageHTML} props \n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expanded: false\n        };\n      }\n\n    expand() {\n       this.setState({\n           expanded: true\n       })\n    }\n\n    close() {\n        this.setState({\n            expanded: false\n        })\n     }\n\n    render(){   \n        let word_count = 0; \n        return (\n            <div className=\"popup-btn\">\n\n                <div className=\"popup-header\"\n                     onClick={(e) => {\n                         console.log(e);\n                         this.state.expanded ? this.close() : this.expand();}}>\n\n                    <img className=\"popup-thumbnail\" src={this.props.thumbnail}></img>\n                    <div className=\"popup-btn-text\">\n                        <h2 className=\"popup-title\">{this.props.title}</h2>\n                        <p className=\"popup-subtitle\">{this.props.subtitle}</p>\n                        <div className=\"popup-control-panel\">\n                            {this.props.keywords?.map((word) =>  <small key={word_count++}>{word}</small>)}\n                            {this.props.launchLink &&\n                             <span className=\"clickable\" onClick={(e) => {window.open(this.props.launchLink); e.stopPropagation();}} target=\"_blank\"><small>{this.props.launchBtnText ? this.props.launchBtnText : \"LAUNCH\"}<OpenInNew style={{ \"marginBottom\": \"-3px\" , \"fontSize\": \"1rem\"}}/></small></span>}\n                        </div>\n                    </div>\n                </div>\n               \n                {this.state.expanded ? \n                    this.props.pageHTML: \"\"}\n\n                {this.state.expanded ? \n                     <a className=\"close-popup-btn clickable\"\n                        onClick={() => this.close()}>\n                         <span style={{\"fontSize\": \"150%\"}}>&#8593;</span>\n                         CLOSE\n                     </a>: \"\"}\n               \n            </div>\n        );\n    }\n}\n\nexport default PopupButton;","import React, { Component } from 'react';\nimport './Section.css';\nimport DisplayGrid from '../components/DisplayGrid';\nimport PopupButton from '../components/PopupButton';\nimport dv_thumbnail from '../images/dataverse/thumbnail_dv.jpg'; \nimport netflix_thumbnail from '../images/netflix/netflix_thumbnail.png'; \nimport poster_thumbnail from '../images/poster/poster_thumbnail.png'; \nimport jam_thumbnail from '../images/jam-stage/jam_thumbnail.png';\nimport dash_thumbnail from '../images/dash/touch_menu.jpg';\nimport translation_thumbnail from '../images/translation/translation_thumbnail.png';\n\n//page image imports\nimport dataverse_home from '../images/dataverse/dv_home_page.jpg';\nimport jam_zoomout from '../images/jam-stage/zoomed-out.png';\nimport jam_zoomin from '../images/jam-stage/close-up.png';\nimport netflix_flow from '../images/netflix/netflix_actor_flow_with_tooltip.png';\nimport netflix_runtime from '../images/netflix/netflix_runtime_graph.png';\nimport dash_ideation from '../images/dash/ideation.jpg';\nimport dash_interaction_table from '../images/dash/interaction_table.jpg';\nimport dash_touch_demo from '../images/dash/touch_menu_cropped.mp4';\nimport translation_diagram from '../images/translation/translation_diagram.png';\nimport poster_demo from '../images/poster/poster_demo.mp4'\n\n\nclass CodeProjects extends Component {\n\n\n    // props are :headerText :list of body\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: this.getProjects()\n        };\n      }\n\n    // all the code projects\n    getProjects() {\n        return [\n            {title: \"Dataverse\", logline: \"An online universe to teach kids about data structures\", thumbnail: dv_thumbnail, languages: [\"React, JS, Java, SQL\"], launchLink: \"https://dataverse.fun\", pageHTML: this.getDataversePage()},\n            {title: \"Jam Stage\", logline: \"An audio-reactive environment made with Three.js\", thumbnail: jam_thumbnail, languages: [\"Three.js, WebAudio, JS\"], launchLink: \"https://laurawilsonri.github.io/jam-stage/\", pageHTML: this.getJamStagePage()},\n            {title: \"COVID-19 Poster Generator\", logline: \"Customize your own social distancing poster\", thumbnail: poster_thumbnail, languages: [\"HTML, CSS, JS\"], launchLink: \"https://laurawilsonri.github.io/covid-poster-generator/\", pageHTML: this.getPosterGenPage()},\n            {title: \"Visualize Netflix in D3\", logline: \"A dashboard of Netflix data visualizations created with D3.js\", thumbnail: netflix_thumbnail, languages: [\"D3, JS, HTML\"], launchLink: \"https://laurawilsonri.github.io/netflix-visualizer/\", pageHTML: this.getNetflixPage()},\n            {title: \"Dash\", logline: \"A collaborative online platform for media management\", languages: [\"React, TypeScript, C#\"], thumbnail: dash_thumbnail, pageHTML: this.getDashPage(), demoLink: \"https://cs.brown.edu/research/ptc/#/project/dash\"},\n            {title: \"Translation API\", logline: \"An automated translation workflow to multilingual sites\", languages: [\"Python, Django, Wagtail\"], thumbnail: translation_thumbnail, pageHTML: this.getTranslationPage(), demoLink: \"https://youtu.be/cJSiN6QXvDg\"}\n        ]}\n\n    getDataversePage() {\n       return <div className=\"project-expansion\">\n           <h3>Overview</h3>\n           <p>This website aims to <b>teach middle school students about data structures</b> in a new, fun way!  \n               Students fly around a rocket through dataverse, a universe where each planet offers a game that \n               is based on a specific data structure. Once they master single-player planets, they can <b>compete against \n               their friends in the multiplayer arena</b> or buy rocket skins and speed upgrades at the shop.</p>\n            \n            <img src={dataverse_home}></img>\n            <label>The welcome screen for dataverse informs users of the basic goal of the website and how to interact with the interface in a concise popup.</label>\n           \n            <h3>My Role</h3>\n            <p>This website was the final project for my Software Engineering class, completed with 3 other students over the course of 4 weeks.</p>\n            <p>The areas of the project I worked on included: </p>\n            <ul>\n                <li>The frontend for the individual games <em>(Reactjs)</em></li>\n                <li>The graphics, art, and iconography <em>(Adobe Illustrator)</em></li>\n                <li>The backend integration and support for multiplayer <em>(Java)</em></li>\n            </ul>\n            \n            <h3>Takeaways</h3>\n            <p>\n                <b>Make your program extensible (yes, even the frontend!).</b><br/>\n                  Our site consists of many planets, including 6 minigames. This resulted in a LOT of pages and popups that were quite similar.\n                  Using React, we were able to create Components that could be reused to prevent repetetive code. Our games also followed a similar pattern\n                  of \"do x to earn y points in z seconds\", so we were able to abstract much of the game logic (backend and frontend). This made adding new games\n                  extremely fast and easy (in fact, we added an entirely new minigame planet the day before our presentation)!</p>\n            <p>\n                <b>Websockets can be a nightmare.</b><br/>\n                    We used websockets to send and receive messages between the frontend and the backend. \n                    This resulted in a long, messy list of message types, so to organize the madness, we created a \n                    MessageManager. To create a new message, we would register it through\n                    the MessageManager, along with a handler for that message. \n                    Then, the MessageManager would receive messages and direct them to the proper handlers.\n                    This made websockets really manageable and extensible for our project!</p>\n            <p>\n                <b>User testing is critical</b><br/>\n                To make sure our site was both informative and fun, we tested it on almost 100 8th graders from Lincoln Middle School. \n                The feedback we received was incredibly insightful-- \n                we learned that the students thought the games were really fun, and especially enjoyed competing against eachother in the multiplayer\n                area, but they felt like they didn't learn a lot about data structures. In response, we added a \"Learn More\" page for each game that \n                teaches about each data structure in more depth, and made the games a bit harder so that you would need to understand the data structure to\n                perform well. In addition, we were able to improve the usability of the site based on specific feedback from the students!\n            </p>\n            </div>;\n            }\n\n\n    getJamStagePage() {\n        return <div className=\"project-expansion\">\n            <h3>Overview</h3>\n                 <p>My final project for MUSC1001: Generative Animation, Jam Stage is <b>an audio-reactive virtual environment that matches the mood of a given audio piece</b>.  \n                     It was built for the web using Three.js and WebAudio. </p>\n            \n                <h3>How I Built It</h3>\n                    <p> I used <b>Three.js</b> to generate a dynamic particle system and <b>Web Audio</b> to get the data from the user’s audio file. \n                    With the data received from Web Audio, I grouped the amplitudes of the frequencies into averages, increasing the group size \n                    as the frequency increased to account for the overrepresentation of higher frequencies. Then, I mapped this data onto the \n                    movement of the particles. Each column of particles represents one frequency group (lower on the left, higher on the right), \n                    and its height represents that frequency group's amplitude. The number of particles that move within that column is \n                    determined by the total frequency sum (so if the sum is 50% of max, 50% of the particles of each column are randomly \n                    chosen to move). </p>\n\n                <img src={jam_zoomout}></img>\n                <label>The particle system first appears as a familiar audio-visualizer, but soon factors in sinusodial movement and the z direction to \n                    become an energetic galaxy, seen below.\n                </label>\n                <img src={jam_zoomin}></img>\n\n                <p>I also added sinusoidal movement for the x and z positions of the particles so that the system is also engaged in some \n                    sort of movement. The maximum z position is determined by the total amplitude of all the frequencies. </p>\n\n                <p>Some other techniques include:</p>\n                <ul>\n                    <li> The colors of each particle are randomized, but weighted towards purple for consistency, and are also affected by the amplitude of their corresponding frequencies.</li>\n                    <li> The size of each particle is representative of the loudness of the audio.</li>\n                    <li> The camera moves with the particles, using the mean location of all the particles to offset all the particles’ y values.</li>\n                </ul>\n                \n                <h3>Spotlight Challenge</h3>\n                <p>One of my biggest challenges in this project was creating readable visual changes that matched the audio’s rhythm. \n                    When I first started mapping all the dots to the amplitude values, the result was either A) too hectic and unreadable, \n                    or B) too simple and boring.  I ended up choosing to isolate the movement of the particles to a subset of each column \n                    so that, instead of all the particles moving each frame, a small amount is randomly chosen to move based on the overall \n                    loudness of the audio. This way, <b>the movement is isolated to a smaller number of particles, which results in visual \n                    changes that are more readable and meaningful.</b></p>\n                </div>;\n                }\n\n    getPosterGenPage() {\n        return <div className=\"project-expansion\">\n            <h3>Overview</h3>\n                <p>This Poster Generator lets users customize and download their own social distancing poster, helping people visualize and respect 6ft of distance through humor! </p>\n                <p>Below is a demo of some poster combinations you can create, or try it out yourself <a href=\"https://laurawilsonri.github.io/covid-poster-generator/\" target=\"_blank\">on the site</a>.</p>\n\n                <video className=\"autoplay-video\" autoPlay muted loop style={{\"width\": \"100%\"}}>\n                    <source src={poster_demo} type=\"video/mp4\" />\n                    Your browser does not support the video tag.\n                </video>\n\n            <h3>How I Built It</h3>\n                <p>I used HTML, CSS, and JavaScript to make the poster generator, and the jsPDF library to download the HTML as a pdf.</p>\n            </div>\n        }\n\n    getNetflixPage() {\n        return <div className=\"project-expansion\">\n            <h3>Overview</h3>\n                <p>This dashboard uses D3.js to visualize the data provided in <a href=\"https://www.kaggle.com/shivamb/netflix-shows\">this Netflix \n                data set</a>. The visualizations reveal the number of titles on Netflix per genre and the average runtime of movies per release year.  \n                In addition, the interactive network graph allows you to explore the connections (shared films) between actors for all films on \n                Netflix directed by a particular director.</p>\n            \n                <img src={netflix_runtime}></img>\n                <label>I added tooltips to provide details about the data points without crowding the visualization with too much text.</label>\n\n                <img src={netflix_flow}></img>\n                <label>Hovering over a link reveals the connections (shared films) between two actors.</label>\n\n            <h3>How I Built It</h3>\n                <p>The data was cleaned and analyzed using panda and JavaScript, and visualized using D3.js.</p>\n            </div>\n        }\n\n        /** TODO: FINISH THIS AND ADD TRANSLATION API PAGE */\n    getDashPage() {\n        return <div className=\"project-expansion\">\n            <h3>Overview</h3>\n                <p>Nicknamed \"the IDE for the humanities\", Dash provides users with an <b>infinite workspace to manage their media</b>, \n                    show relationships between documents, and interact with information through both pen and touch. \n                    This is the longterm focal project of the Brown University Graphics Research Group, where I was an undergraduate\n                    reasearch assistant during my freshman and sophomore years! </p>\n            \n            <h3>Spotlight Contribution: Pen and Touch </h3>\n            <p>My largest task for the group was adding pen and touch support, with a focus on incorporating bimanual interactions.  \n                I began by researching touch interactions for both small and large displays. I was especially inspired by <a href=\"https://www.youtube.com/watch?v=dK-kX_p_IVM\">this video</a> from Microsoft Research. \n                I created a whiteboard to brainstorm some ideas, shown below.</p>\n\n            <img src={dash_ideation}></img>\n            <label>ideation for complex pen and touch interactions</label>\n\n            <p>\n            Then, with a fellow group member, I created the following plan for both basic and complex interactions, with the \n            bimanual interactions colored in blue.\n            </p>\n\n            <img src={dash_interaction_table}></img>\n            <label>the plan we created for the system of touch interaction</label>\n\n            <h3>Touch Context Menu: Bridging the Gap Between the Keyboard and Touch</h3>\n\n            <p>In order to compensate for the lack of keyboard shortcuts on touch screens, we created the touch context menu.  \n                When you <b>hold down a document and tap the background</b>, this menu <b>appears at your fingertips</b>, offering a variety \n                of operations relevant to the selected document, such as copy, pin to presentation, and delete.</p>\n\n            <video className=\"autoplay-video\" autoPlay muted loop>\n                <source src={dash_touch_demo} type=\"video/mp4\" />\n                Your browser does not support the video tag.\n            </video>\n            <label>The touch context menu in action, a palette of options that appear at your fingertips when you hold\n                a document and tap the background\n            </label>\n\n            <p>\n                The addition of this menu greatly <b>improved the efficiency of many of the core actions</b> of the site.  In addition,\n                it allowed users to perform many <b>complex actions on touch screens</b> that were previously only supported on desktop (due to \n                reliance on keyboards).\n            </p>\n\n            <p>\n                Though bimanual interactions were a focus of this project, I do acknowledge that this type of interaction \n                is not suitable for every user. For that reason, we ensured that every action was also possible to acheive \n                through a single-handed interaction, resulting in two (or more) interactions that lead to the same result,\n                in order to accomodate as many users as possible.\n            </p>\n\n            <h3>Takeaways from my time at the lab</h3>\n            <ul>\n                <li>How to work with a large and unfamiliar codebase</li>\n                <li>A plethora of new languages including C#, XAML, and Reactjs.</li>\n                <li>Experience working with a team on a long-term software engineering project </li>\n                <li>How to compose and present a demo to sponsors, such as Adobe</li>\n            </ul>\n\n            <h3>Want to learn more?  Interested in the Brown Graphics Group?</h3>\n                <p>Check out the group's research projects on our website <a href=\"http://ptc.cs.brown.edu/#/projects\">here</a>.</p>\n            </div>\n        }\n\n    getTranslationPage() {\n        return <div className=\"project-expansion\">\n            <h3>Overview</h3>\n                <p>\n                    Governments everywhere use the web to communicate critical information to residents. \n                    Due to a number of constraints, most content is published in English and residents who \n                    need support in other languages are pointed to less accurate fallbacks like Google Translate. \n                </p>\n\n                <p>\n                    For this project, my team partnered with the Brown Policy Lab to build <b>an automated translation \n                    system</b>that integrates a <b>3rd party translation service</b> into a <b>Content Management System.</b>\n                </p>\n            \n\n            <h3>A Deeper Look</h3>\n            <p>The workflow we created can be explained by the following diagram:</p>\n\n            <img src={translation_diagram}></img>\n            <ol>\n                <li>Website content editor <b>updates English content</b> of page through CMS and hits publish.</li>\n                <li>The changed fields are identified.</li>\n                <li>Make an <b>API call to Gengo</b> (3rd party translation service) for each target language.</li>\n                <li>A translator receives the request via Gengo’s interface and provides the translation.</li>\n                <li>BackgroundScheduler makes GET requests periodically to check for posted translations.</li>\n                <li>We parse the returned translation and <b>update the database.</b></li>\n                <li>The website is <b>republished with the up-to-date translations.</b></li>\n            </ol>\n\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/cJSiN6QXvDg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            <label>Mark walks through the automated translation workflow.</label>\n\n            <h3>My Role</h3>\n                <p>For this project, I was responsible for</p>\n                <ul>\n                    <li>building the test site using Django and Wagtail</li>\n                    <li>designing and implemented a diff-tool that detects when text fields are edited, and updates the proper fields in the database with the translations</li>\n                    <li>creating a dropdown that modifies the url and translates the page into the user's desired language</li>\n                </ul>    \n        </div>\n    }\n\n    render(){\n        let project_count = 0;\n\n        return (\n            <div id=\"code-projects\">\n                <h2>What I've been Coding Up</h2>\n\n                <DisplayGrid items={this.state.projects.map((p) => <PopupButton key={\"project-count-\" + project_count++} \n                    title={p.title} \n                    subtitle={p.logline} \n                    thumbnail={p.thumbnail} \n                    keywords={p.languages}\n                    launchLink={p.launchLink ? p.launchLink : p.demoLink}\n                    launchBtnText={p.demoLink && \"DEMO\"}\n                    pageHTML={p.pageHTML}/>)} />\n           \n            </div>\n        );\n    }\n}\n\nexport default CodeProjects;","\n\nimport React, { Component } from 'react';\nimport './Section.css';\nimport DisplayGrid from '../components/DisplayGrid';\nimport PopupButton from '../components/PopupButton';\nimport train_thumbnail from '../images/train/train_thumbnail.jpg'; \nimport robot_thumbnail from '../images/happy-robot/robot_thumbnail.jpg'; \nimport covid_thumbnail from '../images/covid-kit/kit_thumbnail.jpg'; \nimport ring_thumbnail from '../images/ring/ring_thumbnail.jpg'; \nimport hotel_thumbnail from '../images/hotel/hotel_thumbnail.jpg';\n// page image imports //\n// train\nimport train_phone1 from '../images/train/train_phone1.png'; \nimport train_phone2 from '../images/train/train_phone2.png'; \nimport train_physical from '../images/train/train_physical.jpg'; \nimport train_physical_demo from '../images/train/train_physical_demo.mp4'; \nimport train_app_demo from '../images/train/train_app_walkthrough_cropped.mp4'; \n// happy the robot\nimport happy_3d_model from '../images/happy-robot/3d_model.jpg';\nimport happy_gif from '../images/happy-robot/happy_the_robot.gif';\nimport happy_ideation from '../images/happy-robot/ideation.jpg';\nimport happy_iteration1 from '../images/happy-robot/iteration1.jpg';\nimport happy_tech_working from '../images/happy-robot/tech_working.gif';\nimport happy_iterations from '../images/happy-robot/robot_iterations.jpg';\n// covid kit \nimport poster_demo from '../images/poster/poster_demo.mp4';\nimport kit_form from '../images/covid-kit/form.jpg';\nimport kit_ideation from '../images/covid-kit/ideation_collage.jpg';\nimport kit_mask from '../images/covid-kit/mask_prototype.jpg';\nimport kit_prototype from '../images/covid-kit/prototype.jpg';\nimport kit_final from '../images/covid-kit/final.jpg';\nimport kit_includes from '../images/covid-kit/kit_includes.jpg';\n// access ring\nimport ring_final from '../images/ring/ring_final.jpg';\nimport ring_ideation from '../images/ring/ideation.jpg';\nimport ring_3d from '../images/ring/ring_3d.jpg';\nimport ring_metal from '../images/ring/metal.jpg';\nimport ring_gif from '../images/ring/open_door.gif';\nimport ring_poster from '../images/ring/ring_poster.jpg';\n// hotel\nimport hotel_eyetracking_booking from '../images/hotel/hotel_eyetracking_cal.jpg';\nimport hotel_eyetracking_home from '../images/hotel/hotel_eyetracking_home.jpg';\nimport hotel_sketches from '../images/hotel/sketches.jpg';\nimport hotel_guest from '../images/hotel/hotel_guest.jpg';\n\n\n//constants\nconst trivia_link = \"https://docs.google.com/presentation/d/1BXPQT238tvSfXA1S_RnOdpTMQEdKXavHeTo8QA3m66Y/edit?usp=sharing\"\nconst happy_link = \"https://medium.com/@delora_li/happy-the-robot-1cae1d976a03\"\nconst covid_kit_link = \"https://socialdistancekit.wixsite.com/home\";\nconst access_link = \"https://www.youtube.com/watch?v=SMBriUywBc8\";\nconst hotel_link = \"https://www.figma.com/proto/f4bIRsOei5Z3gbAo67J8wK2D/Iterative?node-id=2%3A51&scaling=scale-down\";\n\nclass DesignProjects extends Component {\n\n\n    // props are :headerText :list of body\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: this.getProjects()\n        };\n      }\n\n    // all the design projects\n    getProjects() {\n        return [\n            {title: \"Trivia Train\", logline: \"Gamifing the Boston metro to build community between passengers\", thumbnail: train_thumbnail, tools: [\"Figma\"], launchLink: trivia_link, launchBtnText: \"DECK\", pageHTML: this.getTriviaTrainPage()},\n            {title: \"Happy the Robot\", logline: \"Your new 3D-printed welcome pal\", thumbnail: robot_thumbnail, tools: [\"Arduino, 3D Printer\"], launchLink: happy_link, launchBtnText: \"VIDEO\", pageHTML: this.getHappyRobotPage()},\n            {title: \"COVID Kit\", logline: \"A social distancing care package, delivered to your door\", thumbnail: covid_thumbnail, tools: [\"HTML/CSS, Premiere\"], launchLink: covid_kit_link, launchBtnText: \"SITE\", pageHTML: this.getCovidKitPage()},\n            {title: \"The Access Ring\", logline: \"A design fiction project that reimagines access\", thumbnail: ring_thumbnail, tools: [\"Design Fiction\"], launchLink: access_link, launchBtnText: \"VIDEO\", pageHTML: this.getAccessPage()},\n            {title: \"Canary & Eye Tracking\", logline: \"A better hotel management system, analyzed with eye tracking\", thumbnail: hotel_thumbnail, tools: [\"Figma, Eye Tracking\"], launchLink: hotel_link, pageHTML: this.getHotelPage()},\n        ]}\n\n    getTriviaTrainPage = () =>\n        <div className=\"project-expansion\">\n            <h3>The Problem</h3>\n            <p>Everyday, millions of people across America ride the subway. They sit tightly next to people they don't know, \n                zone out to their go-to playlist, and silently pass by the lively streets of their city. Their daily commutes\n                have become isolating and unfruitful. How can we use this time as an opportunity to <b>connect people to eachother and \n                their cities</b>?</p>\n           \n            <h3>The Solution</h3>\n            <p>As part of the 2020 RISD Makeathon (an 8-hour long design challenge competition), we designed Trivia Train, a <b>game \n                integrated into the Boston metro system where commuters are collectively involved in a trivia style game.</b>  \n                 Through either their phone or the button board on the train, commuters can answer questions about the local \n                community to earn points for their team (train line) while on their daily commute.\n                </p>\n            <p>Through this system, we hope to <b>connect passengers to local spaces and to create a community within the public \n                transit system</b></p>\n\n            <img src={train_phone1}></img>\n            <label>\n                Commuters answer LIVE questions from their phones about local history and current events. Users can even see \n                the percentage of commuters on their train guessed correctly. \n            </label>\n\n            <img src={train_phone2}></img>\n            <label>\n                Correct answers earn points for your team (your train line), and train lines compete to top the monthly leaderboard.\n            </label>\n\n            <img src={train_physical}></img>\n            <label>Riders without phones can still play along through the physical interface integrated onto the train</label>\n\n            <video className=\"autoplay-video\" autoPlay muted loop>\n                <source src={train_physical_demo} type=\"video/mp4\" />\n                Your browser does not support the video tag.\n            </video>\n            <label>The physical prototype we built to simulate the on-train interaction</label>\n\n            <video className=\"autoplay-video\" autoPlay muted loop>\n                <source src={train_app_demo} type=\"video/mp4\" />\n                Your browser does not support the video tag.\n            </video>            \n\n            <h3>What will Trivia Train acheive?</h3>\n            <ul>\n                <li>Build a sense of community among daily commuters, leveraging people's pride in their train lines to encourage participation and friendly competition</li>\n                <li>\n                    Offer an opportunity to learn about local events, news, and history\n                    <ul>\n                        <li>Questions can even include advertisements for upcoming farmers market and other community events</li>\n                    </ul>\n                </li>\n                <li>Earn revenue for the subway system through sponsored questions, which can be used for rennovations</li>\n            </ul>\n\n            <h3>The Team</h3>\n            <p>Our team consisted of 6 RISD and Brown undergrads - most of whom hadn't met before the day started!</p>\n            <p>My teammates included:</p> \n            <ul>\n               <li>Matthew Derry <em>(Industrial Design &amp; Mech. Eng., RISD &amp; Brown)</em></li>\n               <li>Caffrey Fielding <em>(Industrial Design, RISD)</em></li>\n                <li>Al Huang <em>(Industrial Design, RISD)</em></li>\n                <li>Graham Keeley <em>(Engineering, Brown)</em></li>\n                <li>Avantika Velho <em>(Industrial Design, RISD)</em></li>\n                <li>Me <em>(Computer Science, Brown)</em></li>\n            </ul>\n\n            <h3>Result of the competition</h3>\n            <p>We were awarded <b>1st place at the 2020 RISD Makeathon</b> for our design of Trivia Train!</p> \n           \n            </div>;\n\n    getHappyRobotPage = () =>\n    <div className=\"project-expansion\">\n        <h3>The Problem</h3>\n        <p>Walking into an empty room can often feel lifeless and depressing.  How can we leverage technology, \n            a traditionally cold and emotionless tool, to create something that will contribute a positive energy \n            to an empty room, lifting someone's spirits and even making them smile?</p>\n         <p>In essense, <b>how can a set of mechanical parts create something that makes a human smile?</b></p>\n\n         <h3>The Solution, in brief</h3>\n        <p>A 3D printed robot that smiles and blushes when you near it to welcome you into a space.</p>\n        \n        <h3>The Process</h3>\n        <h5>Ideation</h5>\n        <p> \n            Our ideation phase focused around what forms would best connect with people and what makes something cute or likeable.\n            These would be key qualities in our robot as we crafted our vision for its character and personality.\n        </p>\n        <img src={happy_ideation}></img>\n\n        <h5>Clay Prototyping</h5>\n        <p> \n            To test out our idea in a quick and malleable platform, we decided to use clay to build some early protoypes, seen below.\n            The key questions in this phase were: <em>How we use an Arduino kit to make a dynamic face?  Does an LCD screen work well to convey emotion?</em>\n        </p>\n        <img src={happy_iteration1}></img>\n        <label>We used a breadboard to test the technology and get a feel for whether this idea would work before moving on to sodering and battery power.</label>\n        <img src={happy_tech_working}></img>\n        <label>We coded custom characters to get the LCD screen to display a face!</label>\n\n        <h5>3D Printing Iterations</h5>\n        <p> \n            To test out our idea in a quick and malleable platform, we decided to use clay to build some early protoypes, seen below.\n            The key questions in this phase were: <em>How can we fit all the wires and tech inside this small form?  What form works best for our goals?</em>\n        </p>\n        <img src={happy_iterations}></img>\n        <label>Our three main iterations.</label>\n        <p>After receiving feedback that the face was too small when just using the LCD screen, we decided to use the proximity sensor as eyes, LED lights as cheeks, and the LCD screen as the mouth to make the face the larger and more integrated into the form. Because these pieces leant more to a mechanical aesthetic, we opted for the robot-form over the egg-shaped form.</p>\n        <img src={happy_3d_model}></img>\n        <label>The 3D model rendered in Rhino</label>\n\n        <h5>The Final Solution</h5>\n        <img src={happy_gif}></img>\n        <p> \n           In our final iteration, we explored how best to communicate the story behind this product.\n           To do so, we created the following video.\n        </p>\n         <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/8xm_kvFYvto\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n         <h3>The Team</h3>\n         <p>I completed this project in partnership with fellow student Delora Li.</p>\n        </div>;\n\n    getCovidKitPage = () =>\n    <div className=\"project-expansion\">\n        <h3>The Problem</h3>\n        <p>During the tense and hectic time of the COVID-19 pandemic, many people are left uncomfortable and \n            without the proper tools to social distance properly. There is a lack of both inexepensive, accessible supplies,\n            and a reliable, unified source of information.</p>\n        <p><b>How can we encourage and provide support for social distancing?</b></p>\n    \n        <h3>The Solution, in brief</h3>\n        <p>We created a two-part solution to tackle the problem:</p>\n        <ol>\n            <li>A Social Distancing Kit that contains all the tools you need to social distance, delivered to your door.</li>\n            <li>A <a href={covid_kit_link} target=\"_blank\">website</a> that provides a collection of resources, a platform for ordering the kit, and a humorous \n            poster-generator to spread the word about social distancing</li>\n        </ol>\n\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Bw-XwJefJ-o\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n         <label>\n            The promo video for the Social Distance Kit, made with Premiere Pro. \n        </label>  \n\n        <h3>The Process</h3>\n        <h5>Ideation</h5>\n        <img src={kit_ideation}></img>\n        <label> We brainstormed a wide range of ideas, including physical interventions to public spaces,  \n            rewards programs for social distancing, and mask designs that display high-risk symbols.</label>\n\n        <h5>Development</h5>\n        <p>Ultimately, we felt that lack of supplies and information were the two biggest needs, which \n            could be best tackled through a care package and website. The key questions we sought to answer \n            included, <em>What tools do people need to social distance? How can we get those tools to them safely?\n                What symbols best indicate \"high risk\"?</em></p>\n        \n        <img src={kit_mask}></img>\n        <label>\n           We experimented with stickers, magnets, and clips to find a way to express messages such as \"high-risk\" and \"recently traveled\", \n          right on your mask. Stickers didn't last long and magnets were expensive, but bookmark clips were effective!\n        </label>\n\n        <img src={kit_form}></img>\n        <label>\n            After creating several icons that may indicate \"high risk\", we created a survey to gain insights \n            on which one was most effective.\n        </label>\n\n        <img src={kit_prototype}></img>\n        <label>An early prototype of the kit</label>\n\n        <video className=\"autoplay-video\" autoPlay muted loop style={{\"width\": \"100%\"}}>\n                    <source src={poster_demo} type=\"video/mp4\" />\n                    Your browser does not support the video tag.\n        </video>\n        <label>\n            I created a poster generator that lets you customize a humorous poster, including choosing\n            which object you want to represent 6 feet! \n            <a href=\"https://laurawilsonri.github.io/covid-poster-generator/\" target=\"_blank\">Try it out!</a>\n        </label>\n\n        <h3>The Final Product</h3>\n        <img src={kit_final}></img>\n        <label>\n            Our website's landing page, featuring an image of the final kit. \n        </label>\n\n        <img src={kit_includes}></img>\n        <label>\n            The kit includes a variety of items that will support the recipeient as they social distance.\n        </label>\n\n        <p>Check out the <a href={covid_kit_link} target=\"_blank\">website</a> to see our full work!</p>\n        <p>Read our <a href=\"https://medium.com/@designstudiograham/the-social-distance-kit-3cc535bd97c6\" target=\"_blank\">Medium article</a> for additional documentation about our process.</p>\n        <p>Watch our promo video displayed at the top of the top of this page!</p>\n\n        <h3>The Team</h3>\n        <p>I worked with four other students to create the Social Distance Kit as our final \n            project for DesignStudio (a Brown engineering course). My contribution consisted of \n            creating the poster generator, the promo video, the bulk of the website, and some graphics. \n        </p>\n        </div>;\n\n    getAccessPage = () =>\n    <div className=\"project-expansion\">\n        <h3>The Problem</h3>\n        <p>Traditional doors require a tedious and bimanual process of taking out one's keys, manually \n            fitting in the correct key (often trying each one until you find the one that works), and then, \n            opening the door. <b>How can access become seamless by using futuristic technology and things that \n            you are already wearing?</b></p>\n        \n        <h3>The Solution, in brief</h3>\n        <p>A ring that unlocks doors when an authorized wearer opens the door.</p>\n\n        <h3>The Process</h3>\n        <h5>Ideation</h5>\n        <p>Our main questions in the ideation phase were: <em>How can we integrate access control into something we wear everyday?  How can it be secure?</em></p>\n       <img src={ring_ideation}></img>\n       <p>We chose a ring to leverage the facts that</p>\n       <ol>\n            <li>it's always worn on the hand</li>\n            <li>it would touch the door handle (enabling RIFD tech)</li>\n            <li>it could be made discrete and secure (utilizing fingerprint authentication)</li>\n        </ol>\n\n        <h5>Metal Prototyping</h5>\n        <p>In this phase, we began prototyping with metal and found material, and created a video to demonstrate what \n            the use of the ring would look like. Our main questions were: <em>What form best suits a ring for access? What would the use of the product look like?</em></p>\n        <img src={ring_metal}></img>\n\n        <h5>3D Printing Prototyping</h5>\n        <p>Once we had a more finalized design in mind, we began 3D modeling and printing, as well as incorporating electronics to light the ring's LED.  Our main questions were <em>How can we make the ring as discrete as possible? How can we incorporate signals? </em></p>\n       <img src={ring_3d}></img>\n       <img src={ring_final}></img>\n        <label>\n        To mimic the functionality of the light turning on when the person touches a door handle, we created a sliding system so that when the ring was turned sideways, the battery slid in place and turned on the LED.\n        </label>\n\n        <h3>The Final Step</h3>\n        <h5>Video Prototyping</h5>\n        <p>\n            With our final product in hand, our main focus shifted to finding the right narrative for the product so we could \n            best communicate our idea. Furthermore, the video served as a way to check whether the interaction made sense and felt natural.\n        </p>\n        <img src={ring_gif}></img>\n        <img src={ring_poster}></img>\n        <label>The poster I created to communicate our branding as a tool for discrete and secure access.</label><br></br>\n\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/SMBriUywBc8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n       <label>Our final design fiction video, created to imagine the use of such a product in the near-future.</label>\n\n       <h3>The Team</h3>\n       <p>This was a project completed for DesignStudio in Spring 2020 along with groupmates Caroline David and Al Rempe.</p>\n        </div>;\n\n    getHotelPage = () =>\n    <div className=\"project-expansion\">\n        <h3>Overview</h3>\n        <p>This project serves as an experiment in <b>iterative design</b> and <b>eye tracking analysis</b>.  \n            As part of a four member group, we created a prototype of a <b>desktop application for hotel\n            management</b>, beginning with various sketches and building up to a high-fidelity, interactive \n            prototype. We then tested this prototype on a user, tracking and analyzing their eye movements as they\n            navigated through the app.</p>\n\n        <h3>Step 1: Sketches of Possible Navigation Flows</h3>\n        <img style={{\"width\": \"100%\"}} src={hotel_sketches}></img>\n        <p> We began by <b>sketching a multitude of different high-level app structures.</b> Despite their differences, \n            we felt that each sketch had valuable features we could include in our final prototype. As a result,\n             we came up with a prototype that incorporated many of the different sketches together: \n             the navigation came from sketch 1, the calendars came from sketch 4, the filter/search layouts \n             came from sketch 3, and the information grid layout came from sketch 2.</p>\n\n        <h3>Step 2: High-Fidelity Prototyping</h3>\n        <p>We then created an <b>interactive prototype</b> using Figma. <a href={hotel_link}>Try it out yourself</a> on Figma.</p>\n        <img src={hotel_guest}></img>\n        <label>The guest page of the hi-fi prototype. Click through the app <a href={hotel_link}></a></label>\n\n        <h3>Step 3: Eye-Tracking Analysis</h3>\n        <p>We gave the user a task to complete, and used an eye tracker to record the position of their eyes as they \n            navigated the site. Then we analyzed the data and turned it into \"heat maps.\" Below are two of the resulting \"heat maps.\" \n            The closer to red the shade is, the greater amount of time the user spent looking at that area.</p>\n        <img src={hotel_eyetracking_home}></img>\n        <img src={hotel_eyetracking_booking}></img>\n        <label>A sample of our eye tracking \"heat maps\" that reveal the user's focus as they navigate the site.</label>\n\n        <h3>Step 4: Interpretation</h3>\n        <p>On the homepage, the user's focus largely remained on the four central icons, as the heat map displays\n             the deepest red near the center of the icons.  This is what we desired from our design -- to \n             <b> improve efficiency with very clear, direct paths of use.</b></p>\n\n        <p>Generally, <b>the user was able to navigate to the pages and interact with components in the order \n            we expected</b> and the heat maps reflect that the user was able to find the relevant information \n            for each subtask successfully. However, there was some confusion in finding the contract for \n            a customer. In a future iteration of the design, we would ease this struggle by including \n            the contract verification in the general information panel, where the user examined the \n            most frequently in her search to find the contract. </p>\n\n        <h3>The Team</h3>\n        <p>This project was one of several completed for UIUX during Fall 2018, completed in partnership \n            with three other students.\n        </p>\n\n        <h3>Want to learn more? See more eye tracking data?</h3>\n        <p>Check out the <a href=\"https://f4dd3982-bfa5-478e-be58-00d2e9592079.filesusr.com/ugd/54c8e3_f9b785bc199f4c89b5d9880d0ad134cf.pdf\">full PDF report</a> of this project.</p>\n        </div>;\n\n\n    render(){\n        let project_count = 0;\n\n        return (\n            <div id=\"design-projects\">\n                <h2>Spotlight Design Projects</h2>\n\n                <DisplayGrid items={this.state.projects.map((p) => <PopupButton key={\"design-project-\" + project_count++} \n                    title={p.title} \n                    subtitle={p.logline} \n                    thumbnail={p.thumbnail} \n                    keywords={p.tools}\n                    launchLink={p.launchLink}\n                    launchBtnText={p.launchBtnText}\n                    pageHTML={p.pageHTML}/>)} />\n           \n            </div>\n        );\n    }\n}\n\nexport default DesignProjects;","\n\nimport React, { Component } from 'react';\nimport './Section.css';\nimport resume from '../images/RESUME.pdf';\nimport { OpenInNew } from '@material-ui/icons';\n\nclass Resume extends Component {\n\n    // props are :headerText :list of body\n    constructor(props) {\n        super(props);\n      }\n\n    render(){    \n        return (\n            <div id=\"resume-container\">\n                <iframe src={resume} width=\"100%\" height=\"850px\"></iframe>\n                <a href={resume} target=\"_blank\"><button>Launch Full <OpenInNew style={{ \"margin-bottom\": \"-3px\" , \"fontSize\": \"1rem\"}}/></button></a>\n            </div>\n        );\n    }\n}\n\nexport default Resume;","\n\nimport React, { Component } from 'react';\nimport './Section.css';\n\nclass ArtProjects extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: this.getProjects()\n        };\n      }\n\n    // all the code projects\n    getProjects() {\n        return []\n    }\n\n    render(){\n        let project_count = 0;\n\n        return (\n            <div id=\"art-projects\">\n                <h2>A Glimpse into my Home Studio...</h2>\n\n                <h4><em>Coming soon!</em></h4>\n           \n            </div>\n        );\n    }\n}\n\nexport default ArtProjects;","import React, { Component } from 'react';\nimport VerticalNavBar from './VerticalNavBar';\nimport WhoIAmPage from './sections/WhoIAmPage'\nimport './PortfolioSite.css';\nimport CodeProjects from './sections/CodeProjects';\nimport DesignProjects from './sections/DesignProjects';\nimport Resume from './sections/Resume';\nimport ArtProjects from './sections/ArtProjects';\n\nclass PortfolioSite extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //initialize a map of all the pages I want to include\n        this.pages = [\n            {name: \"WHO I AM\", content: <WhoIAmPage/>},\n            {name: \"CODE\", content: <CodeProjects/>},\n            {name: \"DESIGN\", content: <DesignProjects/>},\n            {name: \"STUDIO ART\", content: <ArtProjects/>},\n            {name: \"RESUME\", content: <Resume/>}\n        ]\n\n        this.state = {\n            curPage: this.pages[0]\n        };\n      }\n\n    updateSelectedPage = (page) => {\n        this.setState({\n            curPage: page\n        })\n    }\n\n    render(){    \n        return (\n            <div className=\"site-wrapper\">\n            \n              <div className=\"site-content\">\n                    {this.state.curPage.content}\n\n                <div id=\"portfolio-navbar\">\n                     <VerticalNavBar pages={this.pages} selectPage={(pg) => this.updateSelectedPage(pg)}/>\n                </div>\n             </div>\n\n                <footer>\n                    Laura Wilson | laura_wilson@brown.edu<br/>This website was made with 💙 using Reactjs. <a href=\"https://github.com/laurawilsonri/portfolio\" target=\"_blank\">See source code.</a></footer>\n            </div>\n        );\n    }\n}\n\nexport default PortfolioSite;","import React from 'react';\nimport './App.css';\nimport PortfolioSite from './PortfolioSite';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <PortfolioSite/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}